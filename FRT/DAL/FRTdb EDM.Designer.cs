//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("frtModel", "FK_FinancialKPIsMonth_Months", "Months", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FRT.DAL.Month), "FinancialKPIsMonth", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FRT.DAL.FinancialKPIsMonth), true)]
[assembly: EdmRelationshipAttribute("frtModel", "FK_FinancialKPIsMonth_People", "People", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FRT.DAL.Person), "FinancialKPIsMonth", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FRT.DAL.FinancialKPIsMonth), true)]
[assembly: EdmRelationshipAttribute("frtModel", "FK_FinancialKPIsWeek_People", "People", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FRT.DAL.Person), "FinancialKPIsWeek", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FRT.DAL.FinancialKPIsWeek), true)]
[assembly: EdmRelationshipAttribute("frtModel", "FK_FinancialKPIsWeek_Weeks", "Weeks", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FRT.DAL.Week), "FinancialKPIsWeek", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FRT.DAL.FinancialKPIsWeek), true)]
[assembly: EdmRelationshipAttribute("frtModel", "FK_Links_People", "People", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FRT.DAL.Person), "Links", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FRT.DAL.Link), true)]
[assembly: EdmRelationshipAttribute("frtModel", "FK_Promises_People", "People", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FRT.DAL.Person), "Promises", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FRT.DAL.Promise), true)]
[assembly: EdmRelationshipAttribute("frtModel", "FK_TrainingGoals_People", "People", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FRT.DAL.Person), "TrainingGoals", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FRT.DAL.TrainingGoal), true)]
[assembly: EdmRelationshipAttribute("frtModel", "FK_Promises_PromiseCategories", "PromiseCategories", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FRT.DAL.PromiseCategory), "Promises", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FRT.DAL.Promise), true)]
[assembly: EdmRelationshipAttribute("frtModel", "FK_Promises_Weeks", "Weeks", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FRT.DAL.Week), "Promises", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FRT.DAL.Promise), true)]
[assembly: EdmRelationshipAttribute("frtModel", "FK_ReferralKPIs_People", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FRT.DAL.Person), "ReferralKPI", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FRT.DAL.ReferralKPI), true)]
[assembly: EdmRelationshipAttribute("frtModel", "FK_ReferralKPIs_ReferralDivisions", "ReferralDivision", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FRT.DAL.ReferralDivision), "ReferralKPI", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FRT.DAL.ReferralKPI), true)]
[assembly: EdmRelationshipAttribute("frtModel", "FK_XPMJobs_People", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FRT.DAL.Person), "XPMJob", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FRT.DAL.XPMJobs), true)]
[assembly: EdmRelationshipAttribute("frtModel", "FK_Leave_People", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FRT.DAL.Person), "Leave", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FRT.DAL.Leave), true)]

#endregion

namespace FRT.DAL
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class frtEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new frtEntities object using the connection string found in the 'frtEntities' section of the application configuration file.
        /// </summary>
        public frtEntities() : base("name=frtEntities", "frtEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new frtEntities object.
        /// </summary>
        public frtEntities(string connectionString) : base(connectionString, "frtEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new frtEntities object.
        /// </summary>
        public frtEntities(EntityConnection connection) : base(connection, "frtEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FinancialKPIsMonth> FinancialKPIsMonths
        {
            get
            {
                if ((_FinancialKPIsMonths == null))
                {
                    _FinancialKPIsMonths = base.CreateObjectSet<FinancialKPIsMonth>("FinancialKPIsMonths");
                }
                return _FinancialKPIsMonths;
            }
        }
        private ObjectSet<FinancialKPIsMonth> _FinancialKPIsMonths;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FinancialKPIsWeek> FinancialKPIsWeeks
        {
            get
            {
                if ((_FinancialKPIsWeeks == null))
                {
                    _FinancialKPIsWeeks = base.CreateObjectSet<FinancialKPIsWeek>("FinancialKPIsWeeks");
                }
                return _FinancialKPIsWeeks;
            }
        }
        private ObjectSet<FinancialKPIsWeek> _FinancialKPIsWeeks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Link> Links
        {
            get
            {
                if ((_Links == null))
                {
                    _Links = base.CreateObjectSet<Link>("Links");
                }
                return _Links;
            }
        }
        private ObjectSet<Link> _Links;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Month> Months
        {
            get
            {
                if ((_Months == null))
                {
                    _Months = base.CreateObjectSet<Month>("Months");
                }
                return _Months;
            }
        }
        private ObjectSet<Month> _Months;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Person> People
        {
            get
            {
                if ((_People == null))
                {
                    _People = base.CreateObjectSet<Person>("People");
                }
                return _People;
            }
        }
        private ObjectSet<Person> _People;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PromiseCategory> PromiseCategories
        {
            get
            {
                if ((_PromiseCategories == null))
                {
                    _PromiseCategories = base.CreateObjectSet<PromiseCategory>("PromiseCategories");
                }
                return _PromiseCategories;
            }
        }
        private ObjectSet<PromiseCategory> _PromiseCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Promise> Promises
        {
            get
            {
                if ((_Promises == null))
                {
                    _Promises = base.CreateObjectSet<Promise>("Promises");
                }
                return _Promises;
            }
        }
        private ObjectSet<Promise> _Promises;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TrainingGoal> TrainingGoals
        {
            get
            {
                if ((_TrainingGoals == null))
                {
                    _TrainingGoals = base.CreateObjectSet<TrainingGoal>("TrainingGoals");
                }
                return _TrainingGoals;
            }
        }
        private ObjectSet<TrainingGoal> _TrainingGoals;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Week> Weeks
        {
            get
            {
                if ((_Weeks == null))
                {
                    _Weeks = base.CreateObjectSet<Week>("Weeks");
                }
                return _Weeks;
            }
        }
        private ObjectSet<Week> _Weeks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ReferralDivision> ReferralDivisions
        {
            get
            {
                if ((_ReferralDivisions == null))
                {
                    _ReferralDivisions = base.CreateObjectSet<ReferralDivision>("ReferralDivisions");
                }
                return _ReferralDivisions;
            }
        }
        private ObjectSet<ReferralDivision> _ReferralDivisions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ReferralKPI> ReferralKPIs
        {
            get
            {
                if ((_ReferralKPIs == null))
                {
                    _ReferralKPIs = base.CreateObjectSet<ReferralKPI>("ReferralKPIs");
                }
                return _ReferralKPIs;
            }
        }
        private ObjectSet<ReferralKPI> _ReferralKPIs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<XPMJobs> XPMJobs
        {
            get
            {
                if ((_XPMJobs == null))
                {
                    _XPMJobs = base.CreateObjectSet<XPMJobs>("XPMJobs");
                }
                return _XPMJobs;
            }
        }
        private ObjectSet<XPMJobs> _XPMJobs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Leave> Leaves
        {
            get
            {
                if ((_Leaves == null))
                {
                    _Leaves = base.CreateObjectSet<Leave>("Leaves");
                }
                return _Leaves;
            }
        }
        private ObjectSet<Leave> _Leaves;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FinancialKPIsMonths EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFinancialKPIsMonths(FinancialKPIsMonth financialKPIsMonth)
        {
            base.AddObject("FinancialKPIsMonths", financialKPIsMonth);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FinancialKPIsWeeks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFinancialKPIsWeeks(FinancialKPIsWeek financialKPIsWeek)
        {
            base.AddObject("FinancialKPIsWeeks", financialKPIsWeek);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Links EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLinks(Link link)
        {
            base.AddObject("Links", link);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Months EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMonths(Month month)
        {
            base.AddObject("Months", month);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the People EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPeople(Person person)
        {
            base.AddObject("People", person);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PromiseCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPromiseCategories(PromiseCategory promiseCategory)
        {
            base.AddObject("PromiseCategories", promiseCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Promises EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPromises(Promise promise)
        {
            base.AddObject("Promises", promise);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TrainingGoals EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTrainingGoals(TrainingGoal trainingGoal)
        {
            base.AddObject("TrainingGoals", trainingGoal);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Weeks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWeeks(Week week)
        {
            base.AddObject("Weeks", week);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ReferralDivisions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReferralDivisions(ReferralDivision referralDivision)
        {
            base.AddObject("ReferralDivisions", referralDivision);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ReferralKPIs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReferralKPIs(ReferralKPI referralKPI)
        {
            base.AddObject("ReferralKPIs", referralKPI);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the XPMJobs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToXPMJobs(XPMJobs xPMJobs)
        {
            base.AddObject("XPMJobs", xPMJobs);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Leaves EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLeaves(Leave leave)
        {
            base.AddObject("Leaves", leave);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="frtModel", Name="FinancialKPIsMonth")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FinancialKPIsMonth : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FinancialKPIsMonth object.
        /// </summary>
        /// <param name="kPIMonth">Initial value of the KPIMonth property.</param>
        /// <param name="personCode">Initial value of the PersonCode property.</param>
        public static FinancialKPIsMonth CreateFinancialKPIsMonth(global::System.DateTime kPIMonth, global::System.String personCode)
        {
            FinancialKPIsMonth financialKPIsMonth = new FinancialKPIsMonth();
            financialKPIsMonth.KPIMonth = kPIMonth;
            financialKPIsMonth.PersonCode = personCode;
            return financialKPIsMonth;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime KPIMonth
        {
            get
            {
                return _KPIMonth;
            }
            set
            {
                if (_KPIMonth != value)
                {
                    OnKPIMonthChanging(value);
                    ReportPropertyChanging("KPIMonth");
                    _KPIMonth = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("KPIMonth");
                    OnKPIMonthChanged();
                }
            }
        }
        private global::System.DateTime _KPIMonth;
        partial void OnKPIMonthChanging(global::System.DateTime value);
        partial void OnKPIMonthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PersonCode
        {
            get
            {
                return _PersonCode;
            }
            set
            {
                if (_PersonCode != value)
                {
                    OnPersonCodeChanging(value);
                    ReportPropertyChanging("PersonCode");
                    _PersonCode = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("PersonCode");
                    OnPersonCodeChanged();
                }
            }
        }
        private global::System.String _PersonCode;
        partial void OnPersonCodeChanging(global::System.String value);
        partial void OnPersonCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> TimesheetDollars
        {
            get
            {
                return _TimesheetDollars;
            }
            set
            {
                OnTimesheetDollarsChanging(value);
                ReportPropertyChanging("TimesheetDollars");
                _TimesheetDollars = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TimesheetDollars");
                OnTimesheetDollarsChanged();
            }
        }
        private Nullable<global::System.Decimal> _TimesheetDollars;
        partial void OnTimesheetDollarsChanging(Nullable<global::System.Decimal> value);
        partial void OnTimesheetDollarsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> TimesheetDollarsBudget
        {
            get
            {
                return _TimesheetDollarsBudget;
            }
            set
            {
                OnTimesheetDollarsBudgetChanging(value);
                ReportPropertyChanging("TimesheetDollarsBudget");
                _TimesheetDollarsBudget = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TimesheetDollarsBudget");
                OnTimesheetDollarsBudgetChanged();
            }
        }
        private Nullable<global::System.Decimal> _TimesheetDollarsBudget;
        partial void OnTimesheetDollarsBudgetChanging(Nullable<global::System.Decimal> value);
        partial void OnTimesheetDollarsBudgetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> InvoiceDollars
        {
            get
            {
                return _InvoiceDollars;
            }
            set
            {
                OnInvoiceDollarsChanging(value);
                ReportPropertyChanging("InvoiceDollars");
                _InvoiceDollars = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvoiceDollars");
                OnInvoiceDollarsChanged();
            }
        }
        private Nullable<global::System.Decimal> _InvoiceDollars;
        partial void OnInvoiceDollarsChanging(Nullable<global::System.Decimal> value);
        partial void OnInvoiceDollarsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> InvoiceDollarsBudget
        {
            get
            {
                return _InvoiceDollarsBudget;
            }
            set
            {
                OnInvoiceDollarsBudgetChanging(value);
                ReportPropertyChanging("InvoiceDollarsBudget");
                _InvoiceDollarsBudget = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvoiceDollarsBudget");
                OnInvoiceDollarsBudgetChanged();
            }
        }
        private Nullable<global::System.Decimal> _InvoiceDollarsBudget;
        partial void OnInvoiceDollarsBudgetChanging(Nullable<global::System.Decimal> value);
        partial void OnInvoiceDollarsBudgetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> WriteOffDollars
        {
            get
            {
                return _WriteOffDollars;
            }
            set
            {
                OnWriteOffDollarsChanging(value);
                ReportPropertyChanging("WriteOffDollars");
                _WriteOffDollars = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WriteOffDollars");
                OnWriteOffDollarsChanged();
            }
        }
        private Nullable<global::System.Decimal> _WriteOffDollars;
        partial void OnWriteOffDollarsChanging(Nullable<global::System.Decimal> value);
        partial void OnWriteOffDollarsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> WriteOffDollarsBudget
        {
            get
            {
                return _WriteOffDollarsBudget;
            }
            set
            {
                OnWriteOffDollarsBudgetChanging(value);
                ReportPropertyChanging("WriteOffDollarsBudget");
                _WriteOffDollarsBudget = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WriteOffDollarsBudget");
                OnWriteOffDollarsBudgetChanged();
            }
        }
        private Nullable<global::System.Decimal> _WriteOffDollarsBudget;
        partial void OnWriteOffDollarsBudgetChanging(Nullable<global::System.Decimal> value);
        partial void OnWriteOffDollarsBudgetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> WIPDollars
        {
            get
            {
                return _WIPDollars;
            }
            set
            {
                OnWIPDollarsChanging(value);
                ReportPropertyChanging("WIPDollars");
                _WIPDollars = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WIPDollars");
                OnWIPDollarsChanged();
            }
        }
        private Nullable<global::System.Decimal> _WIPDollars;
        partial void OnWIPDollarsChanging(Nullable<global::System.Decimal> value);
        partial void OnWIPDollarsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> WIPDollarsBudget
        {
            get
            {
                return _WIPDollarsBudget;
            }
            set
            {
                OnWIPDollarsBudgetChanging(value);
                ReportPropertyChanging("WIPDollarsBudget");
                _WIPDollarsBudget = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WIPDollarsBudget");
                OnWIPDollarsBudgetChanged();
            }
        }
        private Nullable<global::System.Decimal> _WIPDollarsBudget;
        partial void OnWIPDollarsBudgetChanging(Nullable<global::System.Decimal> value);
        partial void OnWIPDollarsBudgetChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("frtModel", "FK_FinancialKPIsMonth_Months", "Months")]
        public Month Month
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Month>("frtModel.FK_FinancialKPIsMonth_Months", "Months").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Month>("frtModel.FK_FinancialKPIsMonth_Months", "Months").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Month> MonthReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Month>("frtModel.FK_FinancialKPIsMonth_Months", "Months");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Month>("frtModel.FK_FinancialKPIsMonth_Months", "Months", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("frtModel", "FK_FinancialKPIsMonth_People", "People")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("frtModel.FK_FinancialKPIsMonth_People", "People").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("frtModel.FK_FinancialKPIsMonth_People", "People").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("frtModel.FK_FinancialKPIsMonth_People", "People");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("frtModel.FK_FinancialKPIsMonth_People", "People", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="frtModel", Name="FinancialKPIsWeek")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FinancialKPIsWeek : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FinancialKPIsWeek object.
        /// </summary>
        /// <param name="kPIWeek">Initial value of the KPIWeek property.</param>
        /// <param name="personCode">Initial value of the PersonCode property.</param>
        public static FinancialKPIsWeek CreateFinancialKPIsWeek(global::System.DateTime kPIWeek, global::System.String personCode)
        {
            FinancialKPIsWeek financialKPIsWeek = new FinancialKPIsWeek();
            financialKPIsWeek.KPIWeek = kPIWeek;
            financialKPIsWeek.PersonCode = personCode;
            return financialKPIsWeek;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime KPIWeek
        {
            get
            {
                return _KPIWeek;
            }
            set
            {
                if (_KPIWeek != value)
                {
                    OnKPIWeekChanging(value);
                    ReportPropertyChanging("KPIWeek");
                    _KPIWeek = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("KPIWeek");
                    OnKPIWeekChanged();
                }
            }
        }
        private global::System.DateTime _KPIWeek;
        partial void OnKPIWeekChanging(global::System.DateTime value);
        partial void OnKPIWeekChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PersonCode
        {
            get
            {
                return _PersonCode;
            }
            set
            {
                if (_PersonCode != value)
                {
                    OnPersonCodeChanging(value);
                    ReportPropertyChanging("PersonCode");
                    _PersonCode = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("PersonCode");
                    OnPersonCodeChanged();
                }
            }
        }
        private global::System.String _PersonCode;
        partial void OnPersonCodeChanging(global::System.String value);
        partial void OnPersonCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> TimesheetDollars
        {
            get
            {
                return _TimesheetDollars;
            }
            set
            {
                OnTimesheetDollarsChanging(value);
                ReportPropertyChanging("TimesheetDollars");
                _TimesheetDollars = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TimesheetDollars");
                OnTimesheetDollarsChanged();
            }
        }
        private Nullable<global::System.Decimal> _TimesheetDollars;
        partial void OnTimesheetDollarsChanging(Nullable<global::System.Decimal> value);
        partial void OnTimesheetDollarsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> TimesheetDollarsBudget
        {
            get
            {
                return _TimesheetDollarsBudget;
            }
            set
            {
                OnTimesheetDollarsBudgetChanging(value);
                ReportPropertyChanging("TimesheetDollarsBudget");
                _TimesheetDollarsBudget = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TimesheetDollarsBudget");
                OnTimesheetDollarsBudgetChanged();
            }
        }
        private Nullable<global::System.Decimal> _TimesheetDollarsBudget;
        partial void OnTimesheetDollarsBudgetChanging(Nullable<global::System.Decimal> value);
        partial void OnTimesheetDollarsBudgetChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("frtModel", "FK_FinancialKPIsWeek_People", "People")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("frtModel.FK_FinancialKPIsWeek_People", "People").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("frtModel.FK_FinancialKPIsWeek_People", "People").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("frtModel.FK_FinancialKPIsWeek_People", "People");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("frtModel.FK_FinancialKPIsWeek_People", "People", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("frtModel", "FK_FinancialKPIsWeek_Weeks", "Weeks")]
        public Week Week
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Week>("frtModel.FK_FinancialKPIsWeek_Weeks", "Weeks").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Week>("frtModel.FK_FinancialKPIsWeek_Weeks", "Weeks").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Week> WeekReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Week>("frtModel.FK_FinancialKPIsWeek_Weeks", "Weeks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Week>("frtModel.FK_FinancialKPIsWeek_Weeks", "Weeks", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="frtModel", Name="Leave")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Leave : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Leave object.
        /// </summary>
        /// <param name="leaveId">Initial value of the LeaveId property.</param>
        /// <param name="personCode">Initial value of the PersonCode property.</param>
        /// <param name="dateFrom">Initial value of the DateFrom property.</param>
        /// <param name="dateTo">Initial value of the DateTo property.</param>
        public static Leave CreateLeave(global::System.Int32 leaveId, global::System.String personCode, global::System.DateTime dateFrom, global::System.DateTime dateTo)
        {
            Leave leave = new Leave();
            leave.LeaveId = leaveId;
            leave.PersonCode = personCode;
            leave.DateFrom = dateFrom;
            leave.DateTo = dateTo;
            return leave;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeaveId
        {
            get
            {
                return _LeaveId;
            }
            set
            {
                if (_LeaveId != value)
                {
                    OnLeaveIdChanging(value);
                    ReportPropertyChanging("LeaveId");
                    _LeaveId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LeaveId");
                    OnLeaveIdChanged();
                }
            }
        }
        private global::System.Int32 _LeaveId;
        partial void OnLeaveIdChanging(global::System.Int32 value);
        partial void OnLeaveIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PersonCode
        {
            get
            {
                return _PersonCode;
            }
            set
            {
                OnPersonCodeChanging(value);
                ReportPropertyChanging("PersonCode");
                _PersonCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PersonCode");
                OnPersonCodeChanged();
            }
        }
        private global::System.String _PersonCode;
        partial void OnPersonCodeChanging(global::System.String value);
        partial void OnPersonCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Caption
        {
            get
            {
                return _Caption;
            }
            set
            {
                OnCaptionChanging(value);
                ReportPropertyChanging("Caption");
                _Caption = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Caption");
                OnCaptionChanged();
            }
        }
        private global::System.String _Caption;
        partial void OnCaptionChanging(global::System.String value);
        partial void OnCaptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateFrom
        {
            get
            {
                return _DateFrom;
            }
            set
            {
                OnDateFromChanging(value);
                ReportPropertyChanging("DateFrom");
                _DateFrom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateFrom");
                OnDateFromChanged();
            }
        }
        private global::System.DateTime _DateFrom;
        partial void OnDateFromChanging(global::System.DateTime value);
        partial void OnDateFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTo
        {
            get
            {
                return _DateTo;
            }
            set
            {
                OnDateToChanging(value);
                ReportPropertyChanging("DateTo");
                _DateTo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTo");
                OnDateToChanged();
            }
        }
        private global::System.DateTime _DateTo;
        partial void OnDateToChanging(global::System.DateTime value);
        partial void OnDateToChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("frtModel", "FK_Leave_People", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("frtModel.FK_Leave_People", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("frtModel.FK_Leave_People", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("frtModel.FK_Leave_People", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("frtModel.FK_Leave_People", "Person", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="frtModel", Name="Link")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Link : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Link object.
        /// </summary>
        /// <param name="linkID">Initial value of the LinkID property.</param>
        /// <param name="personCode">Initial value of the PersonCode property.</param>
        public static Link CreateLink(global::System.Int32 linkID, global::System.String personCode)
        {
            Link link = new Link();
            link.LinkID = linkID;
            link.PersonCode = personCode;
            return link;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LinkID
        {
            get
            {
                return _LinkID;
            }
            set
            {
                if (_LinkID != value)
                {
                    OnLinkIDChanging(value);
                    ReportPropertyChanging("LinkID");
                    _LinkID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LinkID");
                    OnLinkIDChanged();
                }
            }
        }
        private global::System.Int32 _LinkID;
        partial void OnLinkIDChanging(global::System.Int32 value);
        partial void OnLinkIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PersonCode
        {
            get
            {
                return _PersonCode;
            }
            set
            {
                OnPersonCodeChanging(value);
                ReportPropertyChanging("PersonCode");
                _PersonCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PersonCode");
                OnPersonCodeChanged();
            }
        }
        private global::System.String _PersonCode;
        partial void OnPersonCodeChanging(global::System.String value);
        partial void OnPersonCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Caption
        {
            get
            {
                return _Caption;
            }
            set
            {
                OnCaptionChanging(value);
                ReportPropertyChanging("Caption");
                _Caption = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Caption");
                OnCaptionChanged();
            }
        }
        private global::System.String _Caption;
        partial void OnCaptionChanging(global::System.String value);
        partial void OnCaptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String URL
        {
            get
            {
                return _URL;
            }
            set
            {
                OnURLChanging(value);
                ReportPropertyChanging("URL");
                _URL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("URL");
                OnURLChanged();
            }
        }
        private global::System.String _URL;
        partial void OnURLChanging(global::System.String value);
        partial void OnURLChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("frtModel", "FK_Links_People", "People")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("frtModel.FK_Links_People", "People").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("frtModel.FK_Links_People", "People").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("frtModel.FK_Links_People", "People");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("frtModel.FK_Links_People", "People", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="frtModel", Name="Month")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Month : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Month object.
        /// </summary>
        /// <param name="monthCommencing">Initial value of the MonthCommencing property.</param>
        public static Month CreateMonth(global::System.DateTime monthCommencing)
        {
            Month month = new Month();
            month.MonthCommencing = monthCommencing;
            return month;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime MonthCommencing
        {
            get
            {
                return _MonthCommencing;
            }
            set
            {
                if (_MonthCommencing != value)
                {
                    OnMonthCommencingChanging(value);
                    ReportPropertyChanging("MonthCommencing");
                    _MonthCommencing = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MonthCommencing");
                    OnMonthCommencingChanged();
                }
            }
        }
        private global::System.DateTime _MonthCommencing;
        partial void OnMonthCommencingChanging(global::System.DateTime value);
        partial void OnMonthCommencingChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("frtModel", "FK_FinancialKPIsMonth_Months", "FinancialKPIsMonth")]
        public EntityCollection<FinancialKPIsMonth> FinancialKPIsMonths
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FinancialKPIsMonth>("frtModel.FK_FinancialKPIsMonth_Months", "FinancialKPIsMonth");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FinancialKPIsMonth>("frtModel.FK_FinancialKPIsMonth_Months", "FinancialKPIsMonth", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="frtModel", Name="Person")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Person : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Person object.
        /// </summary>
        /// <param name="personCode">Initial value of the PersonCode property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="hidden">Initial value of the Hidden property.</param>
        public static Person CreatePerson(global::System.String personCode, global::System.String name, global::System.Boolean hidden)
        {
            Person person = new Person();
            person.PersonCode = personCode;
            person.Name = name;
            person.Hidden = hidden;
            return person;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PersonCode
        {
            get
            {
                return _PersonCode;
            }
            set
            {
                if (_PersonCode != value)
                {
                    OnPersonCodeChanging(value);
                    ReportPropertyChanging("PersonCode");
                    _PersonCode = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("PersonCode");
                    OnPersonCodeChanged();
                }
            }
        }
        private global::System.String _PersonCode;
        partial void OnPersonCodeChanging(global::System.String value);
        partial void OnPersonCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Hidden
        {
            get
            {
                return _Hidden;
            }
            set
            {
                OnHiddenChanging(value);
                ReportPropertyChanging("Hidden");
                _Hidden = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Hidden");
                OnHiddenChanged();
            }
        }
        private global::System.Boolean _Hidden;
        partial void OnHiddenChanging(global::System.Boolean value);
        partial void OnHiddenChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("frtModel", "FK_FinancialKPIsMonth_People", "FinancialKPIsMonth")]
        public EntityCollection<FinancialKPIsMonth> FinancialKPIsMonths
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FinancialKPIsMonth>("frtModel.FK_FinancialKPIsMonth_People", "FinancialKPIsMonth");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FinancialKPIsMonth>("frtModel.FK_FinancialKPIsMonth_People", "FinancialKPIsMonth", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("frtModel", "FK_FinancialKPIsWeek_People", "FinancialKPIsWeek")]
        public EntityCollection<FinancialKPIsWeek> FinancialKPIsWeeks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FinancialKPIsWeek>("frtModel.FK_FinancialKPIsWeek_People", "FinancialKPIsWeek");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FinancialKPIsWeek>("frtModel.FK_FinancialKPIsWeek_People", "FinancialKPIsWeek", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("frtModel", "FK_Links_People", "Links")]
        public EntityCollection<Link> Links
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Link>("frtModel.FK_Links_People", "Links");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Link>("frtModel.FK_Links_People", "Links", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("frtModel", "FK_Promises_People", "Promises")]
        public EntityCollection<Promise> Promises
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Promise>("frtModel.FK_Promises_People", "Promises");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Promise>("frtModel.FK_Promises_People", "Promises", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("frtModel", "FK_TrainingGoals_People", "TrainingGoals")]
        public EntityCollection<TrainingGoal> TrainingGoals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TrainingGoal>("frtModel.FK_TrainingGoals_People", "TrainingGoals");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TrainingGoal>("frtModel.FK_TrainingGoals_People", "TrainingGoals", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("frtModel", "FK_ReferralKPIs_People", "ReferralKPI")]
        public EntityCollection<ReferralKPI> ReferralKPIs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ReferralKPI>("frtModel.FK_ReferralKPIs_People", "ReferralKPI");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ReferralKPI>("frtModel.FK_ReferralKPIs_People", "ReferralKPI", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("frtModel", "FK_XPMJobs_People", "XPMJob")]
        public EntityCollection<XPMJobs> XPMJobs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<XPMJobs>("frtModel.FK_XPMJobs_People", "XPMJob");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<XPMJobs>("frtModel.FK_XPMJobs_People", "XPMJob", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("frtModel", "FK_Leave_People", "Leave")]
        public EntityCollection<Leave> Leaves
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Leave>("frtModel.FK_Leave_People", "Leave");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Leave>("frtModel.FK_Leave_People", "Leave", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="frtModel", Name="Promise")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Promise : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Promise object.
        /// </summary>
        /// <param name="promiseID">Initial value of the PromiseID property.</param>
        /// <param name="personCode">Initial value of the PersonCode property.</param>
        /// <param name="promiseWeek">Initial value of the PromiseWeek property.</param>
        /// <param name="promiseCategory">Initial value of the PromiseCategory property.</param>
        public static Promise CreatePromise(global::System.Int32 promiseID, global::System.String personCode, global::System.DateTime promiseWeek, global::System.String promiseCategory)
        {
            Promise promise = new Promise();
            promise.PromiseID = promiseID;
            promise.PersonCode = personCode;
            promise.PromiseWeek = promiseWeek;
            promise.PromiseCategory = promiseCategory;
            return promise;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PromiseID
        {
            get
            {
                return _PromiseID;
            }
            set
            {
                if (_PromiseID != value)
                {
                    OnPromiseIDChanging(value);
                    ReportPropertyChanging("PromiseID");
                    _PromiseID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PromiseID");
                    OnPromiseIDChanged();
                }
            }
        }
        private global::System.Int32 _PromiseID;
        partial void OnPromiseIDChanging(global::System.Int32 value);
        partial void OnPromiseIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PersonCode
        {
            get
            {
                return _PersonCode;
            }
            set
            {
                OnPersonCodeChanging(value);
                ReportPropertyChanging("PersonCode");
                _PersonCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PersonCode");
                OnPersonCodeChanged();
            }
        }
        private global::System.String _PersonCode;
        partial void OnPersonCodeChanging(global::System.String value);
        partial void OnPersonCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PromiseWeek
        {
            get
            {
                return _PromiseWeek;
            }
            set
            {
                OnPromiseWeekChanging(value);
                ReportPropertyChanging("PromiseWeek");
                _PromiseWeek = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PromiseWeek");
                OnPromiseWeekChanged();
            }
        }
        private global::System.DateTime _PromiseWeek;
        partial void OnPromiseWeekChanging(global::System.DateTime value);
        partial void OnPromiseWeekChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PromiseCategory
        {
            get
            {
                return _PromiseCategory;
            }
            set
            {
                OnPromiseCategoryChanging(value);
                ReportPropertyChanging("PromiseCategory");
                _PromiseCategory = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PromiseCategory");
                OnPromiseCategoryChanged();
            }
        }
        private global::System.String _PromiseCategory;
        partial void OnPromiseCategoryChanging(global::System.String value);
        partial void OnPromiseCategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PromiseDescription
        {
            get
            {
                return _PromiseDescription;
            }
            set
            {
                OnPromiseDescriptionChanging(value);
                ReportPropertyChanging("PromiseDescription");
                _PromiseDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PromiseDescription");
                OnPromiseDescriptionChanged();
            }
        }
        private global::System.String _PromiseDescription;
        partial void OnPromiseDescriptionChanging(global::System.String value);
        partial void OnPromiseDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean PromiseComplete
        {
            get
            {
                return _PromiseComplete;
            }
            set
            {
                OnPromiseCompleteChanging(value);
                ReportPropertyChanging("PromiseComplete");
                _PromiseComplete = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PromiseComplete");
                OnPromiseCompleteChanged();
            }
        }
        private global::System.Boolean _PromiseComplete = false;
        partial void OnPromiseCompleteChanging(global::System.Boolean value);
        partial void OnPromiseCompleteChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("frtModel", "FK_Promises_People", "People")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("frtModel.FK_Promises_People", "People").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("frtModel.FK_Promises_People", "People").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("frtModel.FK_Promises_People", "People");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("frtModel.FK_Promises_People", "People", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("frtModel", "FK_Promises_PromiseCategories", "PromiseCategories")]
        public PromiseCategory PromiseCategory1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PromiseCategory>("frtModel.FK_Promises_PromiseCategories", "PromiseCategories").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PromiseCategory>("frtModel.FK_Promises_PromiseCategories", "PromiseCategories").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PromiseCategory> PromiseCategory1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PromiseCategory>("frtModel.FK_Promises_PromiseCategories", "PromiseCategories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PromiseCategory>("frtModel.FK_Promises_PromiseCategories", "PromiseCategories", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("frtModel", "FK_Promises_Weeks", "Weeks")]
        public Week Week
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Week>("frtModel.FK_Promises_Weeks", "Weeks").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Week>("frtModel.FK_Promises_Weeks", "Weeks").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Week> WeekReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Week>("frtModel.FK_Promises_Weeks", "Weeks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Week>("frtModel.FK_Promises_Weeks", "Weeks", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="frtModel", Name="PromiseCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PromiseCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PromiseCategory object.
        /// </summary>
        /// <param name="promiseCategoryID">Initial value of the PromiseCategoryID property.</param>
        public static PromiseCategory CreatePromiseCategory(global::System.String promiseCategoryID)
        {
            PromiseCategory promiseCategory = new PromiseCategory();
            promiseCategory.PromiseCategoryID = promiseCategoryID;
            return promiseCategory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PromiseCategoryID
        {
            get
            {
                return _PromiseCategoryID;
            }
            set
            {
                if (_PromiseCategoryID != value)
                {
                    OnPromiseCategoryIDChanging(value);
                    ReportPropertyChanging("PromiseCategoryID");
                    _PromiseCategoryID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("PromiseCategoryID");
                    OnPromiseCategoryIDChanged();
                }
            }
        }
        private global::System.String _PromiseCategoryID;
        partial void OnPromiseCategoryIDChanging(global::System.String value);
        partial void OnPromiseCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("frtModel", "FK_Promises_PromiseCategories", "Promises")]
        public EntityCollection<Promise> Promises
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Promise>("frtModel.FK_Promises_PromiseCategories", "Promises");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Promise>("frtModel.FK_Promises_PromiseCategories", "Promises", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="frtModel", Name="ReferralDivision")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReferralDivision : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ReferralDivision object.
        /// </summary>
        /// <param name="division">Initial value of the Division property.</param>
        public static ReferralDivision CreateReferralDivision(global::System.String division)
        {
            ReferralDivision referralDivision = new ReferralDivision();
            referralDivision.Division = division;
            return referralDivision;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Division
        {
            get
            {
                return _Division;
            }
            set
            {
                if (_Division != value)
                {
                    OnDivisionChanging(value);
                    ReportPropertyChanging("Division");
                    _Division = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Division");
                    OnDivisionChanged();
                }
            }
        }
        private global::System.String _Division;
        partial void OnDivisionChanging(global::System.String value);
        partial void OnDivisionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("frtModel", "FK_ReferralKPIs_ReferralDivisions", "ReferralKPI")]
        public EntityCollection<ReferralKPI> ReferralKPIs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ReferralKPI>("frtModel.FK_ReferralKPIs_ReferralDivisions", "ReferralKPI");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ReferralKPI>("frtModel.FK_ReferralKPIs_ReferralDivisions", "ReferralKPI", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="frtModel", Name="ReferralKPI")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReferralKPI : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ReferralKPI object.
        /// </summary>
        /// <param name="personCode">Initial value of the PersonCode property.</param>
        /// <param name="division">Initial value of the Division property.</param>
        public static ReferralKPI CreateReferralKPI(global::System.String personCode, global::System.String division)
        {
            ReferralKPI referralKPI = new ReferralKPI();
            referralKPI.PersonCode = personCode;
            referralKPI.Division = division;
            return referralKPI;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PersonCode
        {
            get
            {
                return _PersonCode;
            }
            set
            {
                if (_PersonCode != value)
                {
                    OnPersonCodeChanging(value);
                    ReportPropertyChanging("PersonCode");
                    _PersonCode = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("PersonCode");
                    OnPersonCodeChanged();
                }
            }
        }
        private global::System.String _PersonCode;
        partial void OnPersonCodeChanging(global::System.String value);
        partial void OnPersonCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Division
        {
            get
            {
                return _Division;
            }
            set
            {
                if (_Division != value)
                {
                    OnDivisionChanging(value);
                    ReportPropertyChanging("Division");
                    _Division = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Division");
                    OnDivisionChanged();
                }
            }
        }
        private global::System.String _Division;
        partial void OnDivisionChanging(global::System.String value);
        partial void OnDivisionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ReferralDollars
        {
            get
            {
                return _ReferralDollars;
            }
            set
            {
                OnReferralDollarsChanging(value);
                ReportPropertyChanging("ReferralDollars");
                _ReferralDollars = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReferralDollars");
                OnReferralDollarsChanged();
            }
        }
        private Nullable<global::System.Decimal> _ReferralDollars;
        partial void OnReferralDollarsChanging(Nullable<global::System.Decimal> value);
        partial void OnReferralDollarsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ReferralDollarsBudget
        {
            get
            {
                return _ReferralDollarsBudget;
            }
            set
            {
                OnReferralDollarsBudgetChanging(value);
                ReportPropertyChanging("ReferralDollarsBudget");
                _ReferralDollarsBudget = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReferralDollarsBudget");
                OnReferralDollarsBudgetChanged();
            }
        }
        private Nullable<global::System.Decimal> _ReferralDollarsBudget;
        partial void OnReferralDollarsBudgetChanging(Nullable<global::System.Decimal> value);
        partial void OnReferralDollarsBudgetChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("frtModel", "FK_ReferralKPIs_People", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("frtModel.FK_ReferralKPIs_People", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("frtModel.FK_ReferralKPIs_People", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("frtModel.FK_ReferralKPIs_People", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("frtModel.FK_ReferralKPIs_People", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("frtModel", "FK_ReferralKPIs_ReferralDivisions", "ReferralDivision")]
        public ReferralDivision ReferralDivision
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReferralDivision>("frtModel.FK_ReferralKPIs_ReferralDivisions", "ReferralDivision").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReferralDivision>("frtModel.FK_ReferralKPIs_ReferralDivisions", "ReferralDivision").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ReferralDivision> ReferralDivisionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReferralDivision>("frtModel.FK_ReferralKPIs_ReferralDivisions", "ReferralDivision");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ReferralDivision>("frtModel.FK_ReferralKPIs_ReferralDivisions", "ReferralDivision", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="frtModel", Name="TrainingGoal")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TrainingGoal : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TrainingGoal object.
        /// </summary>
        /// <param name="goalID">Initial value of the GoalID property.</param>
        /// <param name="personCode">Initial value of the PersonCode property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        public static TrainingGoal CreateTrainingGoal(global::System.Int32 goalID, global::System.String personCode, global::System.DateTime date)
        {
            TrainingGoal trainingGoal = new TrainingGoal();
            trainingGoal.GoalID = goalID;
            trainingGoal.PersonCode = personCode;
            trainingGoal.Date = date;
            return trainingGoal;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GoalID
        {
            get
            {
                return _GoalID;
            }
            set
            {
                if (_GoalID != value)
                {
                    OnGoalIDChanging(value);
                    ReportPropertyChanging("GoalID");
                    _GoalID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GoalID");
                    OnGoalIDChanged();
                }
            }
        }
        private global::System.Int32 _GoalID;
        partial void OnGoalIDChanging(global::System.Int32 value);
        partial void OnGoalIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PersonCode
        {
            get
            {
                return _PersonCode;
            }
            set
            {
                OnPersonCodeChanging(value);
                ReportPropertyChanging("PersonCode");
                _PersonCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PersonCode");
                OnPersonCodeChanged();
            }
        }
        private global::System.String _PersonCode;
        partial void OnPersonCodeChanging(global::System.String value);
        partial void OnPersonCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Goal
        {
            get
            {
                return _Goal;
            }
            set
            {
                OnGoalChanging(value);
                ReportPropertyChanging("Goal");
                _Goal = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Goal");
                OnGoalChanged();
            }
        }
        private global::System.String _Goal;
        partial void OnGoalChanging(global::System.String value);
        partial void OnGoalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String URL
        {
            get
            {
                return _URL;
            }
            set
            {
                OnURLChanging(value);
                ReportPropertyChanging("URL");
                _URL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("URL");
                OnURLChanged();
            }
        }
        private global::System.String _URL;
        partial void OnURLChanging(global::System.String value);
        partial void OnURLChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("frtModel", "FK_TrainingGoals_People", "People")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("frtModel.FK_TrainingGoals_People", "People").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("frtModel.FK_TrainingGoals_People", "People").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("frtModel.FK_TrainingGoals_People", "People");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("frtModel.FK_TrainingGoals_People", "People", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="frtModel", Name="Week")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Week : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Week object.
        /// </summary>
        /// <param name="weekCommencing">Initial value of the WeekCommencing property.</param>
        public static Week CreateWeek(global::System.DateTime weekCommencing)
        {
            Week week = new Week();
            week.WeekCommencing = weekCommencing;
            return week;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime WeekCommencing
        {
            get
            {
                return _WeekCommencing;
            }
            set
            {
                if (_WeekCommencing != value)
                {
                    OnWeekCommencingChanging(value);
                    ReportPropertyChanging("WeekCommencing");
                    _WeekCommencing = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WeekCommencing");
                    OnWeekCommencingChanged();
                }
            }
        }
        private global::System.DateTime _WeekCommencing;
        partial void OnWeekCommencingChanging(global::System.DateTime value);
        partial void OnWeekCommencingChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("frtModel", "FK_FinancialKPIsWeek_Weeks", "FinancialKPIsWeek")]
        public EntityCollection<FinancialKPIsWeek> FinancialKPIsWeeks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FinancialKPIsWeek>("frtModel.FK_FinancialKPIsWeek_Weeks", "FinancialKPIsWeek");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FinancialKPIsWeek>("frtModel.FK_FinancialKPIsWeek_Weeks", "FinancialKPIsWeek", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("frtModel", "FK_Promises_Weeks", "Promises")]
        public EntityCollection<Promise> Promises
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Promise>("frtModel.FK_Promises_Weeks", "Promises");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Promise>("frtModel.FK_Promises_Weeks", "Promises", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="frtModel", Name="XPMJobs")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class XPMJobs : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new XPMJobs object.
        /// </summary>
        /// <param name="xpmJobId">Initial value of the XpmJobId property.</param>
        /// <param name="personCode">Initial value of the PersonCode property.</param>
        public static XPMJobs CreateXPMJobs(global::System.Int32 xpmJobId, global::System.String personCode)
        {
            XPMJobs xPMJobs = new XPMJobs();
            xPMJobs.XpmJobId = xpmJobId;
            xPMJobs.PersonCode = personCode;
            return xPMJobs;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 XpmJobId
        {
            get
            {
                return _XpmJobId;
            }
            set
            {
                if (_XpmJobId != value)
                {
                    OnXpmJobIdChanging(value);
                    ReportPropertyChanging("XpmJobId");
                    _XpmJobId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("XpmJobId");
                    OnXpmJobIdChanged();
                }
            }
        }
        private global::System.Int32 _XpmJobId;
        partial void OnXpmJobIdChanging(global::System.Int32 value);
        partial void OnXpmJobIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PersonCode
        {
            get
            {
                return _PersonCode;
            }
            set
            {
                OnPersonCodeChanging(value);
                ReportPropertyChanging("PersonCode");
                _PersonCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PersonCode");
                OnPersonCodeChanged();
            }
        }
        private global::System.String _PersonCode;
        partial void OnPersonCodeChanging(global::System.String value);
        partial void OnPersonCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Caption
        {
            get
            {
                return _Caption;
            }
            set
            {
                OnCaptionChanging(value);
                ReportPropertyChanging("Caption");
                _Caption = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Caption");
                OnCaptionChanged();
            }
        }
        private global::System.String _Caption;
        partial void OnCaptionChanging(global::System.String value);
        partial void OnCaptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String URL
        {
            get
            {
                return _URL;
            }
            set
            {
                OnURLChanging(value);
                ReportPropertyChanging("URL");
                _URL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("URL");
                OnURLChanged();
            }
        }
        private global::System.String _URL;
        partial void OnURLChanging(global::System.String value);
        partial void OnURLChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("frtModel", "FK_XPMJobs_People", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("frtModel.FK_XPMJobs_People", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("frtModel.FK_XPMJobs_People", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("frtModel.FK_XPMJobs_People", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("frtModel.FK_XPMJobs_People", "Person", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
